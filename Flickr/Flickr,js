            //Note: I need jQuery!

            var apiKey = "231aa68de0dde8a67cb9d06a94649517";

            // Send an HTTP request to the specified URL and return the result
            function emitRequest(url) {
                
                url = url.replace("$apikey$", apiKey);

                return $.getJSON(url, function(data) { return(data); });
            }

            // Retrieve the set of images for the location
            function getImagesForLocation(longitude, latitude, radius, startDate, endDate) {
                // TODO: Cope with multiple pages of data

                var urlTemplate = "https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=$apikey$&min_taken_date=$minDate$&max_taken_date=$maxDate$&content_type=1&lat=$lat$&lon=$lon$&radius=$radius$&radius_units=km&per_page=500&format=json&nojsoncallback=1";
                var url = urlTemplate.replace("$lat$", latitude).replace("$lon$", longitude).replace("$radius$", radius).replace("$minDate$", startDate).replace("$maxDate$", endDate);                
                
                return emitRequest(url).then(result => {
                    var numberOfPhotos = result.photos.total;
                    var photos = result.photos.photo;

                    return photos;
                });                
            }

            // Get the number of users "favouriting" a given image
            function getFavouriteCountForImage(photoId) {

                var urlTemplate = "https://api.flickr.com/services/rest/?method=flickr.photos.getFavorites&api_key=$apikey$&photo_id=$photo$&format=json&nojsoncallback=1";
                var url = urlTemplate.replace("$photo$", photoId);

                return emitRequest(url).then(result => result.photo.total);
            }

            // Get the general properties for an image
            function getPropertiesForImage(photoId) {
                
                var urlTemplate = "https://api.flickr.com/services/rest/?method=flickr.photos.getInfo&api_key=$apikey$&photo_id=$photo$&format=json&nojsoncallback=1";
                var url = urlTemplate.replace("$photo$", photoId);

                return emitRequest(url).then(result => result.photo);
            }

            // Get the number of views an image has had
            function getViewsForImage(photoId) {
                
                return getPropertiesForImage(photoId).then(result => result.views);
            }

            // Get the summary statistics for an image
            function getStatsForImage(photoId) {
                
                var favourites;
                var views;

                return getFavouriteCountForImage(photoId)
                    .then(result => { favourites = result; })
                    .then(() => getViewsForImage(photoId))
                    .then(result => { views = result; })
                    .then(() => { 
                        var stats = {};
                        stats.views = views;
                        stats.favourites = favourites;                                                
                        return stats;
                    });
            }

            // Retrieve the information for a location
            function getInformationForPoint(longitude, latitude) {
                var radius = 0.02;
                var startDate = "2017-01-01";
                var endDate = "2017-07-01";

                var results = [];
                var promises = [];

                return getImagesForLocation(longitude, latitude, radius, startDate, endDate)                    
                        .then(images => {
                                images.forEach(image => {
                                    var photoId = image.id;

                                    var promise = getStatsForImage(photoId).then(result => results.push(result) );
                                    promises.push(promise);
                                });
                            })
                        .then(() => Promise.all(promises).then(() => results));                                  
            }
